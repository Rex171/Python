1.Ввод списка в одну строку, через сплит, после найти сколько раз повторяется введенное число.

# просим пользователя через пробел написать числа
a = input('Введите числа через пробел: ').split()
# выводим введеные пользователем числа
print(a)
# просим пользователя ввести число которое он хочет найти
b = input('Введите число для поиска в массиве: ')
# создаем счетчик для подсчета найденых чисел
count = 0
# создаем цикл для поиска этого числа и сколько раз он встречается
for i in range(len(a)):
  # если нашел, то прибавляем +1 к счету
  if a[i] == b:
    count+=1
# выводим указаное пользователем число и сколько раз он встречается
print('Указанное число встречается в массиве '+str(count) + ' раз(-а)')

___________________________________________________________________________________________________
2.Программа по созданию словаря с ключевыми параметрами «Имя» и «Фамилия», пользователь вводит бесконечно имя и фамилию, пока не будет введен спец.символ.

# создаем листы для наполнения значениями
ListName = []
ListFamily = []
# создаем переменую в которую сохраняем введеные значения
a = {'Имя' : ListName, 'Фамилия' : ListFamily}
print('Для выхода из программы введите в строку имени "Выход"')
# создаем бесконечный цикл который добавляет в листы значения, пока не будет введено слово Выход
while True:
  # просим ввести Имя
  name = input('Введите имя: ')
  # если будет введено слово Выход, то цикл закончится и начнет выводить написанные значения
  if name == "Выход":
    break
    # просим ввести Фамилию
  family = input('Введите фамилию: ')
  if family == "Выход":
    break
# заполняет лист значениями
  ListName.append(name)
  ListFamily.append(family)
# выводит значения
print(a['Имя'])
print (a['Фамилия'])

___________________________________________________________________________________________________
3.Написать программу, которая выводит имя пользователя, дерево каталогов пользователя и показывает директорию из которой запущен скрипт.

# импортируем функции для операционной системы
import getpass
import os
# создаем переменую с именем пользователя
a = getpass.getuser()
#получение древа каталогов
# выводит все папки и файлы из папки пользователя
for i in os.listdir('/Users/'+a):
    print(i)
#получение директории
# выясняет из какой папки запускается скрипт
dir = os.path.abspath(os.curdir)
# выводим имя текущего пользователя
print('Текущий пользователь: ' + a)
# выводим путь откуда запущен скрипт
print('Абсолютный путь к дериктории в которой запущен скрипт: '+dir)

___________________________________________________________________________________________________
4.Написать скрипт резервного копирования, пользователь при начале работы скрипта вводит путь который нужно скопировать, второй строчкой вводит путь который нужно скопировать.

# импортируем функции для манипулирования папками и файлами
import os
import shutil
# просим пользователя ввести путь к файлу
put = input('Введите путь к файлу который хотите скопировать: ')
# проверяем есть ли такой файл
err = os.path.exists('{}'.format(put))
# если есть то просим ввести пользователя куда копировать файл
if err == True:
    put2 = input('Введите путь куда копировать: ')
    # проверяем есть ли такой путь
    err2 = os.path.exists('{}'.format(put2))
    # если да, то копируем
    if err2 == True:
        shutil.copy('{}'.format(put), '{}'.format(put2))
    # если нет, то выводим что нет такого пути
    else:
        print('Неправильный путь')
else:
    print('Вы ввели неправильный путь или такого не сущетсвует!')

___________________________________________________________________________________________________
5.Написать калькулятор в двоичной системе

# просим пользователя ввести только числа 0 и 1
n1 = input("Введите первое двоичное число(только 0 и 1): ")
n2 = input("Введите второе двоичное число(только 0 и 1): ")
# преобразование из десятичной системы в двоичную
n1 = int(n1,2)
n2 = int(n2,2)
# сложение двоичных чисел
plus = bin(n1+n2)[2:]
# выводим ответ
print("Сложение: "+plus)
# вычитание двоичных чисел
minus = bin(n1-n2)[2:]
# выводим ответ
print("Вычитание: "+minus)
# умножение двоичных чисел
multiply = bin(n1*n2)[2:]
# выводим ответ
print("Умножение: "+multiply)
# деление двоичных чисел
divide = bin(n1//n2)[2:]
# выводим ответ
print("Деление: "+divide)

___________________________________________________________________________________________________
6.Написать программу, которая будет выводить разницу между введенными датами

# импортирует функции для манипулирования времени и дат
import datetime
# просим пользователя ввести даты что бы определить разницу во времени
data1 = input('Введите 1 дату (гггг-мм-дд): ')
data2 = input('Введите 2 дату (гггг-мм-дд): ')
# разделяем дату через сплит, на части
a1 = data1.split('-')
b1 = data2.split('-')
# через функцию datetime можно будет выяснить разницу во времени, между этими датами
a3 = datetime.datetime(int(a1[0]),int(a1[1]),int(a1[2]))
b3 = datetime.datetime(int(b1[0]),int(b1[1]),int(b1[2]))
# создаем переменую которая возращает разницу
sum = abs(a3-b3)
# выводим ответ
print(sum)
